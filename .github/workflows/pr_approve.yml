name: PR Approve

on:
  push:
    branches: ["main"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  retag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=prod-

      - name: Pull Retag Push
        run: |
          echo "git-branch: $(git branch)"
          echo "git2: $(git rev-parse)"
          echo "git3: $(git rev-parse --short)"
          echo "git4: $(git rev-parse --short develop)"
          echo "git5: $(git rev-parse --short HEAD)"
          echo "git6: $(git rev-parse --short HEAD~1)"

          export GITHUB_SHA=${{  github.sha }}
          echo "GITHUB_SHA: $GITHUB_SHA"

          export COMMIT_ID=$(git rev-parse --short=7 develop)
          echo "COMMIT_ID: $COMMIT_ID"

          export IMAGE_DEV=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-$(echo "$COMMIT_ID")
          echo "IMAGE_DEV: $IMAGE_DEV"

          export IMAGE_DEV2=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-$COMMIT_ID
          echo "IMAGE_DEV2: $IMAGE_DEV2"

          # docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-$(echo "$COMMIT_ID")
          # docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-$COMMIT_ID
          
          export NEW_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{  github.sha }}
          echo "NEW_IMAGE: $NEW_IMAGE"

          export NEW_IMAGE_WITH_TAG=${{ steps.meta.outputs.tags }}
          echo "NEW_IMAGE_WITH_TAG: $NEW_IMAGE_WITH_TAG"

          export OLD=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-$COMMIT_ID
          echo "OLD: $OLD"

          echo "---"

          # docker tag $OLD $NEW_IMAGE_WITH_TAG
          # docker push

          export COMMIT_ID=$(git rev-parse --short=7 develop)
          export OLD=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-$COMMIT_ID
          docker pull $OLD
          export NEW_IMAGE_WITH_TAG=${{ steps.meta.outputs.tags }}
          docker tag $OLD $NEW_IMAGE_WITH_TAG
          docker push